app Garden_Assistant {
  wasp: {
    version: "^0.13.2"
  },
  title: "Garden Assistant",
  client: {
    rootComponent: import Layout from "@src/Layout/Layout",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

//Routes
route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import  Login  from "@src/Auth/Login"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import  Signup  from "@src/Auth/Signup"
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  authRequired: true,
  component: import { MainPage } from "@src/MainPage"
}

route CalendarRoute { path: "/calendar", to: CalendarPage }
page CalendarPage {
  authRequired: true,
  component: import CalendarView  from "@src/pages/Calendar/CalendarView"
}

route CalendarNewEventRoute {path: "/calendar/new", to: CalendarNewEventPage}
page CalendarNewEventPage {
  authRequired: true,
  component: import CalendarNewEvent from "@src/pages/Calendar/CalendarNewEvent"
}

route CalendarDayViewRoute { path: "/calendar/:day", to: CalendarDayViewPage}
page CalendarDayViewPage {
  authRequired: true,
  component: import CalendarDayView from "@src/pages/Calendar/CalendarDayView"
}

route GardenRoute { path: "/garden", to: GardenPage }
page GardenPage {
  authRequired: true,
  component: import GardenView  from "@src/pages/GardenView"
}

route JournalRoute { path: "/journal", to: JournalPage }
page JournalPage {
  authRequired: true,
  component: import JournalView  from "@src/pages/Journal/JournalView"
}

//Entities
entity User {=psl
  id  Int @id @default(autoincrement())
  journalItems JournalItem[]
  calendarItems CalendarItem[]
psl=}

entity JournalItem {=psl
  id Int @id @default(autoincrement())
  date DateTime @default(now())
  entry String
  user User? @relation(fields: [userId], references: [id])
  userId Int?
psl=}

entity CalendarItem {=psl
  id Int @id @default(autoincrement())
  title String
  createdDate DateTime @default(now())
  eventDate DateTime
  details String
  user User? @relation(fields: [userId], references: [id])
  userId Int?
psl=}

//Queries
query getAllJournalItems {
  fn: import {getAllJournalItems} from "@src/operations/queries/journalQueries",
  entities: [JournalItem]
}

query getAllCalendarItems {
  fn: import {getAllCalendarItems} from "@src/operations/queries/calendarQueries",
  entities: [CalendarItem]
}


//Actions
action createJournalItem {
  fn: import {createJournalItem} from "@src/operations/actions/journalActions",
  entities: [JournalItem]
}

action createCalendarItem{
  fn: import {createCalendarItem} from "@src/operations/actions/calendarActions",
  entities: [CalendarItem]
}